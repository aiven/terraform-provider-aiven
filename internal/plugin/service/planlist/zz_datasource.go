// Copyright (c) 2025 Aiven, Helsinki, Finland. https://aiven.io/
// Code generated by user config generator. DO NOT EDIT.

package planlist

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/datasource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

// datasourceModel with specific datasource timeouts
type datasourceModel struct {
	tfModel
	Timeouts timeouts.Value `tfsdk:"timeouts"`
}

func (tf *datasourceModel) SharedModel() *tfModel {
	return &tf.tfModel
}

func (tf *datasourceModel) TimeoutsObject() types.Object {
	return tf.Timeouts.Object
}

/*
datasourceSchema:

	data "aiven_service_plan_list" "example" {
	  project      = "foo"
	  service_type = "foo"

	  // COMPUTED FIELDS
	  service_plans {
	    cloud_names  = ["test"]
	    service_plan = "foo"
	  }
	}
*/
func datasourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"id": schema.StringAttribute{
				Computed:            true,
				MarkdownDescription: "Resource ID, a composite of `project` and `service_type` IDs.",
			},
			"project": schema.StringAttribute{
				MarkdownDescription: "Project name.",
				Required:            true,
			},
			"service_type": schema.StringAttribute{
				MarkdownDescription: "Service type.",
				Required:            true,
			},
		},
		Blocks: map[string]schema.Block{
			"service_plans": schema.ListNestedBlock{
				MarkdownDescription: "List of plans available for this type of service.",
				NestedObject: schema.NestedBlockObject{Attributes: map[string]schema.Attribute{
					"cloud_names": schema.ListAttribute{
						Computed:            true,
						ElementType:         types.StringType,
						MarkdownDescription: "List of cloud names where the service plan is available.",
					},
					"service_plan": schema.StringAttribute{
						Computed:            true,
						MarkdownDescription: "Subscription plan.",
					},
				}},
			},
			"timeouts": timeouts.Block(ctx),
		},
		MarkdownDescription: "A list of service plans for a given project and service type.",
	}
}
