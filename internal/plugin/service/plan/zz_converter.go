// Copyright (c) 2025 Aiven, Helsinki, Finland. https://aiven.io/
// Code generated by user config generator. DO NOT EDIT.

package plan

import (
	"context"
	"fmt"
	"path/filepath"
	"strings"

	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/aiven/terraform-provider-aiven/internal/plugin/util"
)

const typeName = "aiven_service_plan"

type tfModel struct {
	ID                      types.String `tfsdk:"id"`
	BackupConfig            types.List   `tfsdk:"backup_config"`
	BasePriceUsd            types.String `tfsdk:"base_price_usd"`
	CloudName               types.String `tfsdk:"cloud_name"`
	DiskSpaceCapMb          types.Int64  `tfsdk:"disk_space_cap_mb"`
	DiskSpaceMb             types.Int64  `tfsdk:"disk_space_mb"`
	DiskSpaceStepMb         types.Int64  `tfsdk:"disk_space_step_mb"`
	MaxMemoryPercent        types.Int64  `tfsdk:"max_memory_percent"`
	NodeCount               types.Int64  `tfsdk:"node_count"`
	ObjectStorageGbPriceUsd types.String `tfsdk:"object_storage_gb_price_usd"`
	Project                 types.String `tfsdk:"project"`
	ServicePlan             types.String `tfsdk:"service_plan"`
	ServiceType             types.String `tfsdk:"service_type"`
	ShardCount              types.Int64  `tfsdk:"shard_count"`
}

func (tf *tfModel) SetID(vProject string, vServiceType string, vServicePlan string, vCloudName string) {
	tf.Project = types.StringValue(vProject)
	tf.ServiceType = types.StringValue(vServiceType)
	tf.ServicePlan = types.StringValue(vServicePlan)
	tf.CloudName = types.StringValue(vCloudName)
	tf.ID = types.StringValue(filepath.Join(vProject, vServiceType, vServicePlan, vCloudName))
}

type tfModelBackupConfig struct {
	FrequentIntervalMinutes    types.Int64  `tfsdk:"frequent_interval_minutes"`
	FrequentOldestAgeMinutes   types.Int64  `tfsdk:"frequent_oldest_age_minutes"`
	InfrequentIntervalMinutes  types.Int64  `tfsdk:"infrequent_interval_minutes"`
	InfrequentOldestAgeMinutes types.Int64  `tfsdk:"infrequent_oldest_age_minutes"`
	Interval                   types.Int64  `tfsdk:"interval"`
	MaxCount                   types.Int64  `tfsdk:"max_count"`
	RecoveryMode               types.String `tfsdk:"recovery_mode"`
}

type apiModel struct {
	BackupConfig            *apiModelBackupConfig `json:"backup_config,omitempty"`
	BasePriceUsd            *string               `json:"base_price_usd,omitempty"`
	CloudName               *string               `json:"cloud_name,omitempty"`
	DiskSpaceCapMb          *int64                `json:"disk_space_cap_mb,omitempty"`
	DiskSpaceMb             *int64                `json:"disk_space_mb,omitempty"`
	DiskSpaceStepMb         *int64                `json:"disk_space_step_mb,omitempty"`
	MaxMemoryPercent        *int64                `json:"max_memory_percent,omitempty"`
	NodeCount               *int64                `json:"node_count,omitempty"`
	ObjectStorageGbPriceUsd *string               `json:"object_storage_gb_price_usd,omitempty"`
	Project                 *string               `json:"project,omitempty"`
	ServicePlan             *string               `json:"service_plan,omitempty"`
	ServiceType             *string               `json:"service_type,omitempty"`
	ShardCount              *int64                `json:"shard_count,omitempty"`
}

type apiModelBackupConfig struct {
	FrequentIntervalMinutes    *int64  `json:"frequent_interval_minutes,omitempty"`
	FrequentOldestAgeMinutes   *int64  `json:"frequent_oldest_age_minutes,omitempty"`
	InfrequentIntervalMinutes  *int64  `json:"infrequent_interval_minutes,omitempty"`
	InfrequentOldestAgeMinutes *int64  `json:"infrequent_oldest_age_minutes,omitempty"`
	Interval                   *int64  `json:"interval,omitempty"`
	MaxCount                   *int64  `json:"max_count,omitempty"`
	RecoveryMode               *string `json:"recovery_mode,omitempty"`
}

// flattenData turns Response into TF object
func flattenData[R any](ctx context.Context, state *tfModel, rsp *R, modifiers ...util.MapModifier[R]) diag.Diagnostics {
	api := new(apiModel)
	err := util.Remarshal(rsp, api, modifiers...)
	if err != nil {
		var diags diag.Diagnostics
		diags.AddError("Remarshal error", fmt.Sprintf("Failed to remarshal Response to dtoModel: %s", err.Error()))
		return diags
	}
	if api.BackupConfig != nil {
		vBackupConfig, diags := util.FlattenSingleNested(ctx, flattenBackupConfig, api.BackupConfig, attrsBackupConfig())
		if diags.HasError() {
			return diags
		}
		state.BackupConfig = vBackupConfig
	}
	if api.BasePriceUsd != nil && (*api.BasePriceUsd != "" || !state.BasePriceUsd.IsNull()) {
		state.BasePriceUsd = types.StringPointerValue(api.BasePriceUsd)
	}
	if api.CloudName != nil && (*api.CloudName != "" || !state.CloudName.IsNull()) {
		state.CloudName = types.StringPointerValue(api.CloudName)
	}
	if api.DiskSpaceCapMb != nil {
		state.DiskSpaceCapMb = types.Int64PointerValue(api.DiskSpaceCapMb)
	}
	if api.DiskSpaceMb != nil {
		state.DiskSpaceMb = types.Int64PointerValue(api.DiskSpaceMb)
	}
	if api.DiskSpaceStepMb != nil {
		state.DiskSpaceStepMb = types.Int64PointerValue(api.DiskSpaceStepMb)
	}
	if api.MaxMemoryPercent != nil {
		state.MaxMemoryPercent = types.Int64PointerValue(api.MaxMemoryPercent)
	}
	if api.NodeCount != nil {
		state.NodeCount = types.Int64PointerValue(api.NodeCount)
	}
	if api.ObjectStorageGbPriceUsd != nil && (*api.ObjectStorageGbPriceUsd != "" || !state.ObjectStorageGbPriceUsd.IsNull()) {
		state.ObjectStorageGbPriceUsd = types.StringPointerValue(api.ObjectStorageGbPriceUsd)
	}
	if api.Project != nil && (*api.Project != "" || !state.Project.IsNull()) {
		state.Project = types.StringPointerValue(api.Project)
	}
	if api.ServicePlan != nil && (*api.ServicePlan != "" || !state.ServicePlan.IsNull()) {
		state.ServicePlan = types.StringPointerValue(api.ServicePlan)
	}
	if api.ServiceType != nil && (*api.ServiceType != "" || !state.ServiceType.IsNull()) {
		state.ServiceType = types.StringPointerValue(api.ServiceType)
	}
	if api.ShardCount != nil {
		state.ShardCount = types.Int64PointerValue(api.ShardCount)
	}
	// Response may not contain ID fields.
	// In that case, `terraform import` won't be able to set them. Gets values from the ID.
	if state.ID.ValueString() != "" {
		var parts [4]string
		for i, v := range strings.SplitN(state.ID.ValueString(), "/", 4) {
			parts[i] = v
		}
		if state.Project.ValueString() == "" {
			state.Project = types.StringValue(parts[0])
		}
		if state.ServiceType.ValueString() == "" {
			state.ServiceType = types.StringValue(parts[1])
		}
		if state.ServicePlan.ValueString() == "" {
			state.ServicePlan = types.StringValue(parts[2])
		}
		if state.CloudName.ValueString() == "" {
			state.CloudName = types.StringValue(parts[3])
		}
	}
	state.SetID(state.Project.ValueString(), state.ServiceType.ValueString(), state.ServicePlan.ValueString(), state.CloudName.ValueString())
	return nil
}

func flattenBackupConfig(ctx context.Context, api *apiModelBackupConfig) (*tfModelBackupConfig, diag.Diagnostics) {
	state := new(tfModelBackupConfig)
	if api.FrequentIntervalMinutes != nil {
		state.FrequentIntervalMinutes = types.Int64PointerValue(api.FrequentIntervalMinutes)
	}
	if api.FrequentOldestAgeMinutes != nil {
		state.FrequentOldestAgeMinutes = types.Int64PointerValue(api.FrequentOldestAgeMinutes)
	}
	if api.InfrequentIntervalMinutes != nil {
		state.InfrequentIntervalMinutes = types.Int64PointerValue(api.InfrequentIntervalMinutes)
	}
	if api.InfrequentOldestAgeMinutes != nil {
		state.InfrequentOldestAgeMinutes = types.Int64PointerValue(api.InfrequentOldestAgeMinutes)
	}
	if api.Interval != nil {
		state.Interval = types.Int64PointerValue(api.Interval)
	}
	if api.MaxCount != nil {
		state.MaxCount = types.Int64PointerValue(api.MaxCount)
	}
	if api.RecoveryMode != nil {
		state.RecoveryMode = types.StringPointerValue(api.RecoveryMode)
	}
	return state, nil
}

func attrsBackupConfig() types.ObjectType {
	return types.ObjectType{AttrTypes: map[string]attr.Type{
		"frequent_interval_minutes":     types.Int64Type,
		"frequent_oldest_age_minutes":   types.Int64Type,
		"infrequent_interval_minutes":   types.Int64Type,
		"infrequent_oldest_age_minutes": types.Int64Type,
		"interval":                      types.Int64Type,
		"max_count":                     types.Int64Type,
		"recovery_mode":                 types.StringType,
	}}
}
