// Copyright (c) 2025 Aiven, Helsinki, Finland. https://aiven.io/
// Code generated by user config generator. DO NOT EDIT.

package organization

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/datasource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
)

// datasourceDataModel with specific datasource timeouts
type datasourceDataModel struct {
	dataModel
	Timeouts timeouts.Value `tfsdk:"timeouts"`
}

func (obj *datasourceDataModel) DataModel() *dataModel {
	return &obj.dataModel
}

func datasourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"create_time": schema.StringAttribute{
				Computed:            true,
				MarkdownDescription: "Timestamp in ISO 8601 format, always in UTC.",
			},
			"id": schema.StringAttribute{
				Computed:            true,
				MarkdownDescription: "The organization ID.",
			},
			"name": schema.StringAttribute{
				Computed:            true,
				MarkdownDescription: "Name of the organization.",
				Validators:          []validator.String{stringvalidator.LengthAtMost(128)},
			},
			"tenant_id": schema.StringAttribute{
				Computed:            true,
				DeprecationMessage:  "This field is deprecated and will be removed in the next major release.",
				MarkdownDescription: "Tenant identifier.",
			},
			"update_time": schema.StringAttribute{
				Computed:            true,
				MarkdownDescription: "Timestamp in ISO 8601 format, always in UTC.",
			},
		},
		Blocks:              map[string]schema.Block{"timeouts": timeouts.Block(ctx)},
		MarkdownDescription: "Gets information about an organization.",
	}
}
