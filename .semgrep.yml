rules:

# Rules to make sure that our schema has descriptions for all fields:

- id: schema-resource-without-description
  languages: [go]
  paths:
    include:
    - "resource_*"
    - "datasource_*"
  patterns:
  - pattern: |
      &schema.Resource{ ... }
  - pattern-not: |
      &schema.Resource{ ..., Description: ..., ... }
  - pattern-inside: |
      func $F() *schema.Resource { ... }
  message: |
    Each schema resource should have a description
  severity: ERROR

- id: schema-element-without-description
  languages: [go]
  paths:
    include:
    - "resource_*"
    - "datasource_*"
  patterns:
  - pattern-inside: |
      map[string]*schema.Schema{ ... }
  - pattern: |
      { ... }
  - pattern-not: |
      { ..., Description: ..., ... }
  message: |
    Each schema field should have a description
  severity: ERROR

# Rules to enforce using acctest helpers instead of direct environment variable access:
- id: direct-env-var-access-in-tests
  languages: [go]
  paths:
    include:
    - "*_test.go"
  patterns:
    - pattern-either:
      - pattern: os.Getenv("AIVEN_PROJECT_NAME")
      - pattern: os.Getenv("AIVEN_ORGANIZATION_NAME")
      - pattern: os.Getenv("AIVEN_ACCOUNT_NAME")
      - pattern: os.LookupEnv("AIVEN_PROJECT_NAME")
      - pattern: os.LookupEnv("AIVEN_ORGANIZATION_NAME")
      - pattern: os.LookupEnv("AIVEN_ACCOUNT_NAME")
  message: |
    Do not use os.Getenv/LookupEnv directly in tests for Aiven environment variables.
    Instead use the helper functions from internal/acctest:
    - Use acc.ProjectName() for AIVEN_PROJECT_NAME
    - Use acc.OrganizationName() for AIVEN_ORGANIZATION_NAME
  severity: ERROR

# Rules to select small service plans in tests:

# Rule for Kafka with Kafka Connect
- id: large-plan-in-test-kafka-connect
  languages: [generic]
  paths:
    include:
    - "*_test.go"
  patterns:
  - pattern-inside:
      plan = "..."
  - pattern-inside: |
      resource "aiven_kafka" ... {
        ...
        kafka_user_config {
          ...
          kafka_connect = true
          ...
        }
        ...
      }
  - pattern-not-regex: business-4|%s
  fix: plan = "business-4"
  message: |
    Kafka with kafka_connect enabled requires at least business-4 plan
  severity: ERROR

# Rule for Kafka without Kafka Connect
- id: large-plan-in-test-kafka
  languages: [generic]
  paths:
    include:
    - "*_test.go"
  patterns:
  - pattern-inside:
      plan = "..."
  - pattern-inside: |
      resource "aiven_kafka" ... {
        ...
      }
  - pattern-not-inside: |
      resource "aiven_kafka" ... {
        ...
        kafka_user_config {
          ...
          kafka_connect = true
          ...
        }
        ...
      }
  - pattern-not-regex: startup-2|%s
  fix: plan = "startup-2"
  message: |
    Tests should use startup-2 for Kafka without kafka_connect
  severity: ERROR

# Rule for Flink
- id: large-plan-in-test-flink
  languages: [generic]
  paths:
    include:
    - "*_test.go"
  patterns:
  - pattern-inside:
      plan = "..."
  - pattern-inside: |
      resource "aiven_flink" ... {
        ...
      }
  - pattern-not-regex: business-4|%s
  fix: plan = "business-4"
  message: |
    Flink requires at least business-4 plan
  severity: ERROR

# Rule for Grafana
- id: large-plan-in-test-grafana
  languages: [generic]
  paths:
    include:
    - "*_test.go"
  patterns:
  - pattern-inside:
      plan = "..."
  - pattern-inside: |
      resource "aiven_grafana" ... {
        ...
      }
  - pattern-not-regex: startup-1|%s
  fix: plan = "startup-1"
  message: |
    Grafana should use the smallest plan (startup-1) to save costs
  severity: ERROR

# Rule for M3 Aggregator
- id: large-plan-in-test-m3aggregator
  languages: [generic]
  paths:
    include:
    - "*_test.go"
  patterns:
  - pattern-inside:
      plan = "..."
  - pattern-inside: |
      resource "aiven_m3aggregator" ... {
        ...
      }
  - pattern-not-regex: business-8|%s
  fix: plan = "business-8"
  message: |
    M3Aggregator requires at least business-8 plan
  severity: ERROR

# Rule for ClickHouse
- id: large-plan-in-test-clickhouse
  languages: [generic]
  paths:
    include:
    - "*_test.go"
  patterns:
  - pattern-inside:
      plan = "..."
  - pattern-inside: |
      resource "aiven_clickhouse" ... {
        ...
      }
  - pattern-not-regex: startup-16|%s
  fix: plan = "startup-16"
  message: |
    Clickhouse requires at least startup-16 plan
  severity: ERROR

# Rule for all other services
- id: large-plan-in-test-other
  languages: [generic]
  paths:
    include:
    - "*_test.go"
  patterns:
  - pattern-inside:
      plan = "..."
  - pattern-inside: |
      resource ... ... {
        ...
      }
  - pattern-not-inside: |
      resource "aiven_kafka" ... {
        ...
      }
  - pattern-not-inside: |
      resource "aiven_flink" ... {
        ...
      }
  - pattern-not-inside: |
      resource "aiven_m3aggregator" ... {
        ...
      }
  - pattern-not-inside: |
      resource "aiven_m3db" ... {
        ...
      }
  - pattern-not-inside: |
      resource "aiven_clickhouse" ... {
        ...
      }
  - pattern-not-inside: |
      resource "aiven_grafana" ... {
        ...
      }
  - pattern-not-regex: startup-4|%s
  fix: plan = "startup-4"
  message: |
    Tests should use the smallest service plan to save costs
  severity: ERROR
