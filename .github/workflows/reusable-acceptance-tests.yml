name: Reusable Acceptance Tests

on:
  workflow_call:
    inputs:
      ref:
        description: 'The git ref (branch, tag, or commit) to run tests against'
        required: true
        type: string
    secrets:
      AIVEN_TOKEN:
        required: true
      AIVEN_PROJECT_NAME_PREFIX:
        required: true
      AIVEN_ORGANIZATION_NAME:
        required: true
      AIVEN_PAYMENT_METHOD_ID:
        required: true

jobs:
  setup_aiven_project_suffix:
    runs-on: ubuntu-latest
    outputs:
      project_name_suffix: ${{ steps.selproj.outputs.project_name_suffix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - id: selproj
        run: echo "project_name_suffix=$(task -s ci:selproj | tr -d '\n')" >> $GITHUB_OUTPUT
        env:
          AIVEN_TOKEN: ${{ secrets.AIVEN_TOKEN }}
          AIVEN_PROJECT_NAME_PREFIX: ${{ secrets.AIVEN_PROJECT_NAME_PREFIX }}

  find_tests:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find_tests.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - uses: arduino/setup-task@v2
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - id: find_tests
        run: echo "matrix=$(task ci:discover-test-matrix)" >> $GITHUB_OUTPUT

  test:
    name: test (${{ matrix.pkg.name }})
    needs: [setup_aiven_project_suffix, find_tests]
    runs-on: ubuntu-latest
    env:
      ACC_TEST_PARALLELISM: 5
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        pkg: ${{ fromJson(needs.find_tests.outputs.matrix) }}
    steps:
      - uses: softprops/turnstyle@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          same-branch-only: true
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - uses: arduino/setup-task@v2
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - id: get_tf_path
        name: Get Terraform Path
        run: echo "terraform_path=$(which terraform)" >> $GITHUB_OUTPUT
      - name: Run Acceptance Tests
        run: task test-acc
        env:
          AIVEN_TOKEN: ${{ secrets.AIVEN_TOKEN }}
          TF_ACC_TERRAFORM_PATH: ${{ steps.get_tf_path.outputs.terraform_path }}
          AIVEN_PROJECT_NAME: >-
            ${{ secrets.AIVEN_PROJECT_NAME_PREFIX }}${{ needs.setup_aiven_project_suffix.outputs.project_name_suffix }}
          AIVEN_ORGANIZATION_NAME: ${{ secrets.AIVEN_ORGANIZATION_NAME }}
          AIVEN_ACCOUNT_NAME: ${{ secrets.AIVEN_ORGANIZATION_NAME }}
          AIVEN_PAYMENT_METHOD_ID: ${{ secrets.AIVEN_PAYMENT_METHOD_ID }}
          PKG_PATH: ${{ matrix.pkg.path }}

  tests-summary:
    name: All Tests Passed
    runs-on: ubuntu-latest
    needs: [test]
    if: always() && needs.test.result != 'skipped'
    steps:
      - name: Check matrix outcome
        run: |
          if [[ "${{ needs.test.result }}" == "success" ]]; then
            echo "All tests passed successfully!"
          else
            echo "One or more tests in the matrix failed. Result: ${{ needs.test.result }}"
            exit 1
          fi

  sweep:
    needs: [test, setup_aiven_project_suffix]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: softprops/turnstyle@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          same-branch-only: true
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - uses: arduino/setup-task@v2
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: nick-invision/retry@v3
        if: always()
        with:
          timeout_minutes: 15
          max_attempts: 15
          command: task --yes sweep
        env:
          AIVEN_TOKEN: ${{ secrets.AIVEN_TOKEN }}
          AIVEN_PROJECT_NAME: >-
            ${{ secrets.AIVEN_PROJECT_NAME_PREFIX }}${{ needs.setup_aiven_project_suffix.outputs.project_name_suffix }}
          AIVEN_ORGANIZATION_NAME: ${{ secrets.AIVEN_ORGANIZATION_NAME }}
          AIVEN_ACCOUNT_NAME: ${{ secrets.AIVEN_ORGANIZATION_NAME }}
