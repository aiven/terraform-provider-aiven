name: Acceptance Tests

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  setup_aiven_project_suffix:
    runs-on: ubuntu-latest
    outputs:
      project_name_suffix: ${{ steps.selproj.outputs.project_name_suffix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - id: selproj
        run: echo "project_name_suffix=$(make -s ci-selproj | tr -d '\n')" >> $GITHUB_OUTPUT
        env:
          AIVEN_TOKEN: ${{ secrets.AIVEN_TOKEN }}
          AIVEN_PROJECT_NAME_PREFIX: ${{ secrets.AIVEN_PROJECT_NAME_PREFIX }}

  acceptance_tests:
    needs: setup_aiven_project_suffix
    runs-on: ubuntu-latest
    env:
      ACC_TEST_PARALLELISM: 5
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        pkg: [
          account,
          alloydbomni,
          cassandra,
          clickhouse,
          connectionpool,
          dragonfly,
          flink,
          grafana,
          influxdb,
          kafka,
          kafkaschema,
          kafkatopic,
          m3db,
          mysql,
          opensearch,
          organization,
          pg,
          project,
          redis,
          servicecomponent,
          serviceintegration,
          staticip,
          thanos,
          valkey,
          vpc,
        ]

    steps:
      - uses: softprops/turnstyle@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          same-branch-only: true

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3 #Install latest Terraform version
        with:
          terraform_wrapper: false

      # Get the path to the installed Terraform binary
      - id: get_tf_path
        name: Get Terraform Path
        run: echo "terraform_path=$(which terraform)" >> $GITHUB_OUTPUT

      - name: Run Acceptance Tests
        run: make test-acc
        env:
          AIVEN_TOKEN: ${{ secrets.AIVEN_TOKEN }}
          TF_ACC_TERRAFORM_PATH: ${{ steps.get_tf_path.outputs.terraform_path }}
          AIVEN_PROJECT_NAME: >-
            ${{ secrets.AIVEN_PROJECT_NAME_PREFIX }}${{ needs.setup_aiven_project_suffix.outputs.project_name_suffix }}
          AIVEN_ORGANIZATION_NAME: ${{ secrets.AIVEN_ORGANIZATION_NAME }}
          AIVEN_ACCOUNT_NAME: ${{ secrets.AIVEN_ORGANIZATION_NAME }}
          PKG: ${{ matrix.pkg }}

  sweep:
    if: always()
    needs: [acceptance_tests, setup_aiven_project_suffix]
    runs-on: ubuntu-latest
    steps:
      - uses: softprops/turnstyle@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          same-branch-only: true

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - uses: nick-invision/retry@v3
        if: always()
        with:
          timeout_minutes: 15
          max_attempts: 15
          command: make sweep
        env:
          AIVEN_TOKEN: ${{ secrets.AIVEN_TOKEN }}
          AIVEN_PROJECT_NAME: >-
            ${{ secrets.AIVEN_PROJECT_NAME_PREFIX }}${{ needs.setup_aiven_project_suffix.outputs.project_name_suffix }}
          AIVEN_ORGANIZATION_NAME: ${{ secrets.AIVEN_ORGANIZATION_NAME }}
          AIVEN_ACCOUNT_NAME: ${{ secrets.AIVEN_ORGANIZATION_NAME }}
