# yaml-language-server: $schema=.schema.yml
location: internal/plugin/service/organization/permission
resource:
  description: |
    Grants [roles and permissions](https://aiven.io/docs/platform/concepts/permissions)
    to a principal for a resource. Permissions can be granted at the organization, organizational unit, and project level.
    Unit-level permissions aren't shown in the Aiven Console.

    To assign permissions to multiple users and groups on the same combination of organization ID, resource ID and resource type, don't use multiple `aiven_organization_permission` resources.
    Instead, use multiple permission blocks as in the example usage.

    **Do not use the `aiven_project_user` or `aiven_organization_group_project` resources with this resource**.

    By default, Aiven Terraform Provider validates whether the resource already exists in the Aiven API.
    This validation prevents you from managing permissions for a specific resource using multiple `aiven_organization_group_project` resources,
    which leads to overwrites and conflicts.
    In case of a conflict, you can import the resource using the `terraform import` command to continue managing it.
    Alternatively, you can disable this validation by setting the `AIVEN_ORGANIZATION_PERMISSION_VALIDATE_CONFLICT` environment variable to `false`,
    which will cause Terraform to override the remote state.
idAttribute:
  compose:
    - organization_id
    - resource_type
    - resource_id
operations:
  PermissionsSet: upsert
  PermissionsGet: read
schema:
  permissions:
    items:
      properties:
        permissions:
          description: List of [roles and permissions](https://aiven.io/docs/platform/concepts/permissions) to grant"
        principal_id:
          description: ID of the user or group to grant permissions to. Only active users who have accepted an [invite](https://aiven.io/docs/platform/howto/manage-org-users) to join the organization can be granted permissions
